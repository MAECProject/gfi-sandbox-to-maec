****************************************************

      MAEC XML -> OVAL XML Converter Script

 Copyright (c) 2011 - The MITRE Corporation

****************************************************

BY USING THE MAEC TO OVAL SCRIPT, YOU SIGNIFY YOUR ACCEPTANCE OF THE TERMS AND 
CONDITIONS OF USE.  IF YOU DO NOT AGREE TO THESE TERMS, DO NOT USE THE MAEC TO OVAL
CONVERTER SCRIPT.

For more information, please refer to the terms.txt file.

#################################################################
#MAEC XML --> OVAL XML Generation Script v0.91                  #
#Generates OVAL definitions/tests/objects from a MAEC XML file  #
#Compatible with content produced using MAEC Schema v1.1        #
#v0.91 - extracts files, directories, and registry keys          #
#01/20/2011                                                     #
#Ivan Kirillov//ikirillov@mitre.org                             #
#                                                               #
#################################################################
# MAEC - http://maec.mitre.org  #                               #
# OVAL - http://oval.mitre.org  #                               #
#################################################################
--------------------------------------------------------------------------------
--Included Files----------------------------------------------------------------

README: this file.
maec_to_oval.py: the MAEC XML to OVAL XML Python converter script.
maecv11.py: the MAEC Python bindings used by the script.
oval57.py: the OVAL Python bindings used by the script.
terms.txt: the terms of usage for this script.
--------------------------------------------------------------------------------
--Usage Notes-------------------------------------------------------------------

There are two main command line parameters for this script:

-i: the path to the input MAEC XML path

-o: the path to the output OVAL XML file

To use the script, run the following command:

python maec_to_oval.py -i <maec_xml_file> -o <oval_xml_file>

For verbose error output (printing of tracebacks), you can specify a -v as the first parameter:

python maec_to_oval.py -v -i <maec_xml_file> -o <oval_xml_file>

--------------------------------------------------------------------------------
--What to do with the generated OVAL XML?---------------------------------------

Since the current revision of the script extracts only those artifacts that are defined as created by malware, its generated output can be used to check for the existence of such artifacts on a system. This can be done using MITRE's reference OVAL interpreter (see http://oval.mitre.org/language/interpreter.html), as well as many other OVAL compatible products.
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------